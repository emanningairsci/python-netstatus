Help on module services.sqlserver in services:

NAME
    services.sqlserver

FILE
    /home/one/dev/python-netstatus/services/sqlserver.py

DESCRIPTION
    services.sqlserver.SQLServer
    This abstract class provides a base framework for checking the
    availability of SQL servers.

CLASSES
    services.server.Server(__builtin__.object)
        SQLServer
    
    class SQLServer(services.server.Server)
     |  Method resolution order:
     |      SQLServer
     |      services.server.Server
     |      __builtin__.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, host, port, user, password)
     |  
     |  getStatus(self, **kwargs)
     |      Returns a boolean value depending on whether some command can be
     |      executed on the server (and therefore that a successful login
     |      can be made). Each different SQL server will use whatever
     |      command makes the most sense for that server type. Note that
     |      least privilege is assumed, so (eg.) write access is never
     |      tested.
     |      
     |      No kwargs are parsed by this function.
     |      
     |      THIS IS AN ABSTRACT METHOD! Be sure you are returning either
     |      True or False in your implementation.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from services.server.Server:
     |  
     |  getResponse()
     |      A 'getter' method that returns a dictionary of (possibly) useful
     |      information about the server's last response. Note that only the
     |      most recent response is available. As long as the _Response
     |      variable is used, this function should not need to be
     |      overwritten.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from services.server.Server:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)


